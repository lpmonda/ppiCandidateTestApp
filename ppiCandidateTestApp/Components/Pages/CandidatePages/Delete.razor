@page "/candidates/delete"
@using Microsoft.EntityFrameworkCore
@using ppiCandidateTestApp.Models
@inject IDbContextFactory<ppiCandidateTestApp.Data.ppiCandidateTestAppContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<!-- <h1>Delete</h1> -->

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Candidate</h2>
    <hr />
    @if (candidate is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">First Name</dt>
            <dd class="col-sm-10">@candidate.Firstname</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Last Name</dt>
            <dd class="col-sm-10">@candidate.Lastname</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Phone Number</dt>
            <dd class="col-sm-10">@candidate.Phone</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Zipcode</dt>
            <dd class="col-sm-10">@candidate.zipcode</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Email Address</dt>
            <dd class="col-sm-10">@candidate.email</dd>
        </dl>
        <EditForm method="post" Model="candidate" OnValidSubmit="DeleteCandidate" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(candidate is null)">Delete</button> |
            <a href="/candidates">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Candidate? candidate;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        candidate = await context.Candidate.FirstOrDefaultAsync(m => m.Id == Id);

        if (candidate is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteCandidate()
    {
        using var context = DbFactory.CreateDbContext();
        context.Candidate.Remove(candidate!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/candidates");
    }
}
