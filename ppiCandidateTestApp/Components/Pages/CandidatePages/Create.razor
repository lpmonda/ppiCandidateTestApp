@page "/candidates/create"
@using Microsoft.EntityFrameworkCore
@using ppiCandidateTestApp.Models
@inject IDbContextFactory<ppiCandidateTestApp.Data.ppiCandidateTestAppContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create New Contact</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Candidate" OnValidSubmit="AddCandidate" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="firstname" class="form-label">First Name:</label> 
                <InputText id="firstname" @bind-Value="Candidate.Firstname" class="form-control" /> 
                <ValidationMessage For="() => Candidate.Firstname" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastname" class="form-label">Last Name:</label> 
                <InputText id="lastname" @bind-Value="Candidate.Lastname" class="form-control" /> 
                <ValidationMessage For="() => Candidate.Lastname" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="phone" class="form-label">Phone Number:</label> 
                <InputText id="phone" @bind-Value="Candidate.Phone" class="form-control" /> 
                <ValidationMessage For="() => Candidate.Phone" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="zipcode" class="form-label">Zipcode:</label> 
                <InputNumber id="zipcode" @bind-Value="Candidate.zipcode" class="form-control" /> 
                <ValidationMessage For="() => Candidate.zipcode" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="email" class="form-label">Email Address:</label> 
                <InputText id="email" @bind-Value="Candidate.email" class="form-control" /> 
                <ValidationMessage For="() => Candidate.email" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/candidates">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Candidate Candidate { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddCandidate()
    {
        using var context = DbFactory.CreateDbContext();
        context.Candidate.Add(Candidate);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/candidates");
    }
}
